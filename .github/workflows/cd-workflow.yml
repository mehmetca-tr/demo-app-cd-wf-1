name: CD-Workflow

on:
  workflow_call:
    inputs:
      ENV_FILE:
        required: true
        type: string
    secrets:
      ACR_URL:
        required: true
      ACR_USERNAME:
        required: true
      ACR_PASSWORD:
        required: true
      AZURE_CREDENTIALS:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout service repository"
      uses: actions/checkout@v3
      with:
        path: main

    - name: "Checkout services-helm-charts repository"
      uses: actions/checkout@v3
      with:
        repository: mehmetca-tr/services-helm-charts
        path: services-helm-charts

    - name: Import environment configuration variables maps file
      id: import-env
      shell: bash
      run: |
        while read line; do
          echo "$line" >> $GITHUB_ENV
        done < main/${{ inputs.ENV_FILE }}
    
    - name: Use the env var
      run: |
        echo "${{ env.RESOURCE_GROUP }}"

    - name: "Set the target AKS cluster"
      uses: Azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.CLUSTER_NAME }}
        resource-group: ${{ env.RESOURCE_GROUP }}


    ### HELM COMMANDS

    - name: Install Helm
      uses: Azure/setup-helm@v1
      with:
        version: v3.8.0

    - name: Helm Dry Run
      run: |
        helm upgrade \
            --dry-run \
            --install \
            --create-namespace \
            --namespace ${{ env.NAMESPACE }} \
            --atomic \
            --wait \
            ${{ env.HELM_RELEASE_NAME }} \
            ${{ env.HELM_CHART_PATH }} \
            --set namespace=${{ env.NAMESPACE }} \
            --set image.repository=${{ secrets.ACR_URL }} \
            --set image.name=${{ env.IMAGE_NAME }} \
            --set image.tag=${{ github.sha }}
            ### "--SET" should be replaced with "-f values.yaml" format

    - name: Helm Package
      run: |
        helm package \
            --dependency-update \
            --app-version ${{ env.APP_VERSION }}-${{ github.sha }} \
            --version ${{ env.HELM_CHART_VERSION }}-${{ github.sha }} \
            ${{ env.HELM_CHART_PATH }}

    - name: Authenticate with the registry
      run: |
        helm registry login \
            ${{ secrets.ACR_URL }} \
            --username ${{ secrets.ACR_USERNAME }} \
            --password ${{ secrets.ACR_PASSWORD }}

    - name: Push chart to registry as OCI artifact
      run: |
        helm push \
        ${{ env.HELM_RELEASE_NAME }}-${{ env.HELM_CHART_VERSION }}-${{ github.sha }}.tgz \
        oci://${{ secrets.ACR_URL }}/helm

    - name: Install / Upgrade helm chart
      run: |
        helm upgrade \
            --install \
            --create-namespace \
            --namespace ${{ env.NAMESPACE }} \
            --atomic \
            --wait \
            ${{ env.HELM_RELEASE_NAME }} \
            oci://${{ secrets.ACR_URL }}/helm/${{ env.HELM_RELEASE_NAME }} --version ${{ env.HELM_CHART_VERSION }}-${{ github.sha }} \
            --set namespace=${{ env.NAMESPACE }} \
            --set image.repository=${{ secrets.ACR_URL }} \
            --set image.name=${{ env.IMAGE_NAME }} \
            --set image.tag=${{ github.sha }}
            ### "--SET" should be replaced with "-f values.yaml" format

    # --- PreProd Tests ---
  test:
    runs-on: ubuntu-latest
    steps:
    - name: "PreProd Test Steps"
      run: echo "---- PreProd Tests ----"

    # --- Validation&Approvement ---
  approvement:
    runs-on: ubuntu-latest
    environment: 'preprod'
    steps:
    - name: "PreProd Get Approvement"
      run: |
        echo "The test process has been completed..."
        echo "Approved..."
        echo "Application image will be tagged with a < STABLE > tag and push to the ACR..."

    # --- Image Promotion ---
  image-promotion:
    runs-on: ubuntu-latest
    steps:
    - name: "PreProd Image Promotion Step"
      run: echo "---- PreProd Image Promotion ----"

    - uses: Azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_URL }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    
    - name: "Tag and push to container registry"
      run: |
        docker tag ${{ secrets.ACR_URL }}/${{env.IMAGE_NAME}}:${{ github.sha }} ${{ secrets.ACR_URL }}/${{env.IMAGE_NAME}}:${{ github.sha }}-stable
        docker push ${{ secrets.ACR_URL }}/${{env.IMAGE_NAME}}:${{ github.sha }}-stable